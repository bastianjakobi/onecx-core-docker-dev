services:
  ########################################
  ########### REVERSE-PROXY ##############
  ########################################
  traefik:
    image: ${TRAEFIK}
    command: --api.insecure=true --providers.docker=true #Enables the web UI and tells Tr√¶fik to listen to docker
    ports:
      - "80:80" #The HTTP port
      - "8082:8080" #The Web UI (enabled by --api)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock #so Traefik can listen to the Docker events
    networks:
      - onecx-app

  ########################################
  ############### DATABASE ###############
  ########################################
  postgresdb:
    image: ${POSTGRES}
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: admin
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./postgresdb-init/:/docker-entrypoint-initdb.d/
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 3
    labels:
      - "traefik.http.services.postgresdb.loadbalancer.server.port=5432"
      - "traefik.http.routers.postgresdb.rule=Host(`postgresdb`)"
    networks:
      - onecx-app

  #############################################
  ################ Security ###################
  #############################################
  keycloak-app:
    image: ${KEYCLOAK}
    command:
      [
        "start-dev --import-realm",
      ]
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    volumes:
      - ./keycloak-init/realm-export.json:/opt/keycloak/data/import/realm.json
    labels:
      - "traefik.http.services.keycloak-app.loadbalancer.server.port=8080"
      - "traefik.http.routers.keycloak-app.rule=Host(`keycloak-app`)"
    networks:
      - onecx-app

  ##############################################################
  ######### 1000kit apps #######################################
  ##############################################################
  tkit-portal-server:
    image: ${TKIT_PORTAL_SERVER}
    volumes:
      - ./tkit-portal-server-init/:/home/jboss/tkit-portal-server-init/
    environment:
      QUARKUS_DATASOURCE_USERNAME: tkit-portal-server
      QUARKUS_DATASOURCE_PASSWORD: tkit-portal-server
      QUARKUS_DATASOURCE_JDBC_URL: "jdbc:postgresql://postgresdb:5432/tkit-portal-server?sslmode=disable"
      ONECX_MP_JWT_VERIFY_ISSUERS: http://keycloak-app/realms/OneCX
      ONECX_MP_JWT_VERIFY_PUBLICKEY_LOCATIONS: http://keycloak-app:8080/realms/OneCX/protocol/openid-connect/certs/
      TKIT_APM_YAML_MP_REST_URL: http://apm:8080/tkit-apm-rs/
      TENANT_RESOLVER_API_MP_REST_URL: http://tenant-resolver:8080/
      TKIT_DATAIMPORT_ENABLED: "true"
      TKIT_DATAIMPORT_CONFIGURATIONS_PORTAL_ENABLED: "true"
      TKIT_DATAIMPORT_CONFIGURATIONS_MFE_ENABLED: "true"
      TKIT_DATAIMPORT_CONFIGURATIONS_MFE_FILE: "/home/jboss/tkit-portal-server-init/dev-mfe-data.import.json"
      TKIT_DATAIMPORT_CONFIGURATIONS_PORTAL_FILE: "/home/jboss/tkit-portal-server-init/dev-data.import.json"
      # QUARKUS_LOG_LEVEL: DEBUG
      APM_REQUIRED: "true"
    depends_on:
      postgresdb:
        condition: service_healthy
    labels:
      - "traefik.http.services.tkit-portal-server.loadbalancer.server.port=8080"
      - "traefik.http.routers.tkit-portal-server.rule=Host(`tkit-portal-server`)"
    networks:
      - onecx-app

  apm:
    image: ${APM}
    environment:
      QUARKUS_DATASOURCE_USERNAME: apm
      QUARKUS_DATASOURCE_PASSWORD: apm
      QUARKUS_DATASOURCE_JDBC_URL: "jdbc:postgresql://postgresdb:5432/apm?sslmode=disable"
      MP_JWT_VERIFY_ISSUER: http://keycloak-app/realms/OneCX
      MP_JWT_VERIFY_PUBLICKEY_LOCATION: http://keycloak-app:8080/realms/OneCX/protocol/openid-connect/certs
    depends_on:
      postgresdb:
        condition: service_healthy
    labels:
      - "traefik.http.services.apm.loadbalancer.server.port=8080"
      - "traefik.http.routers.apm.rule=Host(`apm`)"
    networks:
      - onecx-app
  
  tkit-menu-management-bff:
    image: ${TKIT_MENU_MANAGEMENT_BFF}
    environment:
      MP_JWT_VERIFY_ISSUER: http://keycloak-app/realms/OneCX
      MP_JWT_VERIFY_PUBLICKEY_LOCATION: http://keycloak-app:8080/realms/OneCX/protocol/openid-connect/certs
      KEYCLOAK_URL: http://keycloak-app/
      KEYCLOAK_TOKEN_URL: http://keycloak-app/realms/OneCX/protocol/openid-connect/token
      KEYCLOAK_REALM: OneCX
      QUARKUS_LOG_LEVEL: DEBUG
      TOKEN_ROLE_CLAIM_NAME: realm_roles
    depends_on:
      postgresdb:
        condition: service_healthy
    labels:
      - "traefik.http.services.tkit-menu-management-bff.loadbalancer.server.port=8080"
      - "traefik.http.routers.tkit-menu-management-bff.rule=Host(`tkit-menu-management-bff`)"
    networks:
      - onecx-app
  
  portal-mf-shell:
    image: ${PORTAL_MF_SHELL}
    environment:
      APP_BASE_HREF: /portal-mf-shell/
      TKIT_PORTAL_ID: ADMIN
      KEYCLOAK_CLIENT_ID: ping-angular-app-ui
      KEYCLOAK_REALM: OneCX
      MP_JWT_VERIFY_ISSUER: http://keycloak-app/realms/OneCX
      MP_JWT_VERIFY_PUBLICKEY_LOCATION: http://keycloak-app:8080/realms/OneCX/protocol/openid-connect/certs
      KEYCLOAK_URL: http://keycloak-app/
      KEYCLOAK_TOKEN_URL: http://keycloak-app/realms/OneCX/protocol/openid-connect/token
    ports:
      - "5010:8080" #The HTTP port
    depends_on:
      postgresdb:
        condition: service_healthy
    labels:
      - "traefik.http.services.portal-mf-shell.loadbalancer.server.port=8080"
      - "traefik.http.routers.portal-mf-shell.rule=Host(`ui`)&&Pathprefix(`/portal-mf-shell/`)"
    networks:
      - onecx-app

  portal-mgmt:
    image: ${PORTAL_MGMT}
    environment:
      APP_BASE_HREF: /core/portal-mgmt/
      TKIT_PORTAL_ID: ADMIN
      KEYCLOAK_CLIENT_ID: ping-angular-app-ui
      KEYCLOAK_REALM: OneCX
      MP_JWT_VERIFY_ISSUER: http://keycloak-app/realms/OneCX
      MP_JWT_VERIFY_PUBLICKEY_LOCATION: http://keycloak-app:8080/realms/OneCX/protocol/openid-connect/certs
      KEYCLOAK_URL: http://keycloak-app/
      KEYCLOAK_TOKEN_URL: http://keycloak-app/realms/OneCX/protocol/openid-connect/token
    ports:
      - "5000:8080" #The HTTP port
    depends_on:
      postgresdb:
        condition: service_healthy
    labels:
      - "traefik.http.services.portal-mgmt.loadbalancer.server.port=8080"
      - "traefik.http.routers.portal-mgmt.rule=Host(`ui`)&&Pathprefix(`/core/portal-mgmt/`)"
    networks:
      - onecx-app

volumes:
  postgres:
  tkit-portal-server-init:

networks:
  onecx-app:
